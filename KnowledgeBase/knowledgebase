docker build --no-cache -t masteransh/laravel-ecommerce-prateek:3 .
docker push masteransh/laravel-ecommerce-prateek:3

docker service update --image masteransh/laravel-ecommerce-prateek:latest mystack_app
docker stack rm mystack

docker node ls
docker node inspect ntyh5o096ucif67xmv5lq5ysu
docker node update --label-add db=server1 dog6m8pa15vldi6cx01h2k9wi
docker node update --label-add db=server2 jp48gk1h43rw1fyqbh3owh5cb
docker node update --label-add db=server3 r4b7yk8aocyt4cl6kj6ipgyw1
docker node update --label-add db=server4 agb9zhmp4oxyfsrsgi93svo4z

# for deletions all volumes
docker volume rm mystack_backup_data mystack_mysql1_data mystack_mysql2_data mystack_mysql3_data mystack_mysql4_data mystack_mysql5_data

#clear cahce and reset all
docker system prune

#check docker stack working or not
docker stack ps mystack
docker service ls

# For Monitoring
docker stats (live)
docker container stats --no-stream

#Check Nging Config
docker service logs mystack_nginx --follow
docker exec -it $(docker ps --filter name=mystack_nginx --format "{{.ID}}") cat /etc/nginx/nginx.conf
docker service update --force mystack_nginx

#resetting docker
docker stop $(docker ps -aq)
docker rm $(docker ps -aq)
docker rmi -f $(docker images -q)
docker volume rm $(docker volume ls -q)
docker volume prune -f
docker network rm $(docker network ls -q)
docker network prune -f

#single line reset
docker swarm leave --force && \
docker service rm $(docker service ls -q) && \
docker stop $(docker ps -aq) && docker rm -f $(docker ps -aq) && \
docker network prune -f && docker network rm $(docker network ls -q) && \
docker volume rm $(docker volume ls -q) && docker volume prune -f && \
docker rmi -f $(docker images -q) && \
systemctl restart docker

#down and rebuilt
# For Remove with Volumn remove -v if you keep safe volumes
docker-compose down -v && docker-compose up -d --build

#reset docker
docker compose down
docker system prune -a -f